#!/bin/bash
# liblightmodbus - a lightweight, multiplatform Modbus library
# Copyright (C) 2016 Jacek Wieczorek <mrjjot@gmail.com>

# This file is part of liblightmodbus.

# Liblightmodbus is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Liblightmodbus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


if [ -z ${LIBCONF+x} ]; then
	LIBCONF=include/lightmodbus/libconf.h
fi;
>$LIBCONF;

if [ -z ${CONFLOG+x} ]; then
	CONFLOG=conf.log
fi;
>$CONFLOG;

cat >> $LIBCONF <<EOM
/*
	This file gets automatically generated by makefile

	Its purpose is to configure each liblightmodbus header file,
	so the user does not have to pass tons of compiler options each time
	he/she wants to compile the library.
	It also serves as a pretty nice source of information about current
	library setup.

	Do not edit this file manually unless you know what you are doing.
*/
#ifndef LIGHTMODBUS_LIBCONF_H
#define LIGHTMODBUS_LIBCONF_H
EOM

echo $LIBCONFHEADER >> $LIBCONF

printf "[staticmem] slave request - " >> $CONFLOG
if [ -z $STATICMEM_SREQUEST ]; then
	echo "dynamic" >> $CONFLOG
else
	echo "$STATICMEM_SREQUEST bytes" >> $CONFLOG
	echo "#define LIGHTMODBUS_STATICMEM_SLAVE_REQUEST $STATICMEM_SREQUEST" >> $LIBCONF
fi;

printf "[staticmem] slave response - " >> $CONFLOG
if [ -z $STATICMEM_SRESPONSE ]; then
	echo "dynamic" >> $CONFLOG
else
	echo "$STATICMEM_SRESPONSE bytes" >> $CONFLOG
	echo "#define LIGHTMODBUS_STATICMEM_SLAVE_RESPONSE $STATICMEM_SRESPONSE" >> $LIBCONF
fi;

printf "[staticmem] master request - " >> $CONFLOG
if [ -z $STATICMEM_MREQUEST ]; then
	echo "dynamic" >> $CONFLOG
else
	echo "$STATICMEM_MREQUEST bytes" >> $CONFLOG
	echo "#define LIGHTMODBUS_STATICMEM_MASTER_REQUEST $STATICMEM_MREQUEST" >> $LIBCONF
fi;

printf "[staticmem] master response - " >> $CONFLOG
if [ -z $STATICMEM_MRESPONSE ]; then
	echo "dynamic" >> $CONFLOG
else
	echo "$STATICMEM_MRESPONSE bytes" >> $CONFLOG
	echo "#define LIGHTMODBUS_STATICMEM_MASTER_RESPONSE $STATICMEM_MRESPONSE" >> $LIBCONF
fi;

printf "[staticmem] master data - " >> $CONFLOG
if [ -z $STATICMEM_MDATA ]; then
	echo "dynamic" >> $CONFLOG
else
	echo "$STATICMEM_MDATA bytes" >> $CONFLOG
	echo "#define LIGHTMODBUS_STATICMEM_MASTER_DATA $STATICMEM_MDATA" >> $LIBCONF
fi;


#Manage modules
functions=(01 02 03 04 05 06 15 16 22)

case $SMODULES in
	*forcebase*)
		addbase=true
		;;
	*)
		addbase=false
		;;
esac;

for i in "${functions[@]}"; do
	if echo $SMODULES | grep -q $i; then
		printf "#define LIGHTMODBUS_F%sS\n" $i >> $LIBCONF
		echo "[x] slave $i" >> $CONFLOG
		case $i in
			01)
				echo "slave-coils"
				addbase=true
				;;
			02)
				echo "slave-coils"
				addbase=true
				;;
			03)
				echo "slave-registers"
				addbase=true
				;;
			04)
				echo "slave-registers"
				addbase=true
				;;
			05)
				echo "slave-coils"
				addbase=true
				;;
			06)
				echo "slave-registers"
				addbase=true
				;;
			15)
				echo "slave-coils"
				addbase=true
				;;
			16)
				echo "slave-registers"
				addbase=true
				;;
			22)
				echo "slave-registers"
				addbase=true
				;;
		esac;
	else
		echo "[ ] slave $i" >> $CONFLOG
	fi
done
if [ "$addbase" == "true" ]; then
	echo "slave-base slave-link"
	echo "[info] slave base is going to be included" >> $CONFLOG
else
	echo "[warning] skipping slave base" >> $CONFLOG
fi;


case $MMODULES in
	*forcebase*)
		addbase=true
		;;
	*)
		addbase=false
		;;
esac;

for i in "${functions[@]}"; do
	if echo $MMODULES | grep -q $i; then
		printf "#define LIGHTMODBUS_F%sM\n" $i >> $LIBCONF
		echo "[x] master $i" >> $CONFLOG
		case $i in
			01)
				echo "master-coils"
				addbase=true
				;;
			02)
				echo "master-coils"
				addbase=true
				;;
			03)
				echo "master-registers"
				addbase=true
				;;
			04)
				echo "master-registers"
				addbase=true
				;;
			05)
				echo "master-coils"
				addbase=true
				;;
			06)
				echo "master-registers"
				addbase=true
				;;
			15)
				echo "master-coils"
				addbase=true
				;;
			16)
				echo "master-registers"
				addbase=true
				;;
			22)
				echo "master-registers"
				addbase=true
				;;
		esac;
	else
		echo "[ ] master $i" >> $CONFLOG
	fi
done
if [ "$addbase" == "true" ]; then
	echo "master-base master-link"
	echo "[info] master base is going to be included" >> $CONFLOG
else
	echo "[warning] skipping master base" >> $CONFLOG
fi;

echo "#endif" >> $LIBCONF
