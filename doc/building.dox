/**
\page building Building liblightmodbus

\note In order to build the library CMake 3.3 or newer is required.
Versions up to 1.3 used script-based build system, no longer maintained
as of version 1.4.

The library's build configuration process is pretty complex,
as the library consists of many modules that can be included
in the build or omited. If you want to go with default configuration
first, take a look at the section below.

## Default build configuration
 1. `mkdir build` - Create a new directory for build environment
 2. `cmake ..` - Run CMake with no additional flags
 3. `make all` - Build the library

## Custom build
The only difference between default and customized builds are the arguments
passed to CMake. 

### Library modules
 - `SLAVE_BASE` - slave basic feature set (required by all other slave-related modules)
 - `F01S` - slave support for Modbus function 01
 - `F02S` - slave support for Modbus function 02
 - `F03S` - slave support for Modbus function 03
 - `F04S` - slave support for Modbus function 04
 - `F05S` - slave support for Modbus function 05
 - `F06S` - slave support for Modbus function 06
 - `F15S` - slave support for Modbus function 15
 - `F16S` - slave support for Modbus function 16
 - `F22S` - slave support for Modbus function 22
 - `MASTER_BASE` - master basic feature set (required by all other master-related modules)
 - `F01M` - master support for Modbus function 01
 - `F02M` - master support for Modbus function 02
 - `F03M` - master support for Modbus function 03
 - `F04M` - master support for Modbus function 04• F05M - master support for Modbus function 05
 - `F06M` - master support for Modbus function 06
 - `F15M` - master support for Modbus function 15
 - `F16M` - master support for Modbus function 16
 - `F22M` - master support for Modbus function 22
 - `SLAVE_USER_FUNCTIONS` - support for user-defined Modbus functions on slave side (see \ref user-functions)
 - `MASTER_USER_FUNCTIONS` - support for user-defined Modbus functions on master side (see \ref user-functions)
 - `REGISTER_CALLBACK` - slave register callback function (see \ref register-callback)
 - `COIL_CALLBACK` - slave coil callback function (see \ref register-callback)
 - `NO_MASTER DATA_BUFFER` - disable exclusive master’s processed data buffer (see \ref advanced-configuration)
 - `MASTER_INVASIVE_PARSING` - allow master to modify received frame (use with `NO MASTER DATA BUFFER`)
 - `EXPERIMENTAL` - enable experimental features
 - `ADDON_EXAMINE` - enable standalone modbusExamine function add-on

*/